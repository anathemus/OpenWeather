@using OpenWeather.Models
@using OpenWeather.Controllers
@using System.Linq
@using System.Diagnostics
@model List<CurrentWeather>
@{
    ViewBag.Title = "Open Weather App";
    HomeController controller = new HomeController();
}

<div class="row">
    @for (int k = 0; k < 10; k += 5)
    {
        <div class="col-md-6">
            @for (int i = k; i < k + 5; i++)
            {
                if (Model.ElementAt(i) != null)
                {
                    string result;
                    if (controller.CityInfo.TryGetValue(Model.ElementAt(i).city.name,
                        out result))
                    { }
                    else
                    {
                        result = "Error!";
                    }
                    var cityTxt = Model.ElementAt(i).city.name + "\t" + result;

                    <hr style="width: 100%; color: black; height: 1px; background-color:black;" />
                    <h4>@cityTxt</h4><br />
                    <br />
                    <h5>Date<span style="padding:0px 100px 0px 100px"></span>Avg Temp(F)</h5>
                    <hr style="border-bottom: dashed 1px;" />

                    // for loop to loop through 5 days
                    for (int j = 0; j < 5; j++)
                    {
                        DateTimeOffset today = DateTimeOffset.Now.AddDays(j);
                        IEnumerable<OpenWeather.Models.List> date = new List<OpenWeather.Models.List>();
                        date = from list in Model.ElementAt(i).list
                               where DateTimeOffset.Parse(list.dt_txt).ToString("yyyy-MM-dd") == today.ToString("yyyy-MM-dd")
                               select list;
                        IEnumerable<float> precipitation = new List<float>();
                        precipitation = from list in date
                                        where list.rain != null
                                        select list.rain._3h;
                        string rain = "";
                        if (precipitation.Count() > 0)
                        {
                            rain = "*";
                        }
                        float avgTemp = 0;
                        foreach (var item in date)
                        {
                            avgTemp += item.main.temp;
                        }

                        avgTemp = avgTemp / date.Count();
                        <h6>
                            @DateTime.Parse(date.First().dt_txt).ToString("MM/dd/yyyy")
                            @rain
                            <span style="padding:0px 100px 0px 100px"></span>
                            @avgTemp
                        </h6>
                    }
                }
                else
                {
                    @:<h2>No Results</h2>
                    Debug.WriteLine(Model.Count);
                }
             }
        </div>
     }
</div>